---
- hosts: localhost
  become: yes
  gather_facts: false

  vars:
    aws_access_key: " "
    aws_secret_key: " "
    title: "YASH"
    vpc_name: yash_vpc
    igw_name: yash_igw
    pubsubnet_name: yash_pub
    pvtsubnet_name: yash_pvt
    pubroute_table_name: yash_pub_rt
    pvtroute_table_name: yash_pvt_rt
    security_group_name: yash_sg
    vpc_cidr_block: '10.0.0.0/16'
    pubsubnet_cidr_block: '10.0.1.0/24'
    pvtsubnet_cidr_block: '10.0.2.0/24'
    destination_cidr_block: '0.0.0.0/0'
    port22_cidr_block: '0.0.0.0/0'
    region: "us-east-1"
    pubzone: "us-east-1a"
    pvtzone: "us-east-1b"
    image_id: "ami-0166fe664262f664c"
    type: "t2.micro"
    key_name: "yash"
    instance_name1: yash-instance1
    instance_name2: yash-instance2

  tasks:
    # Create VPC
    - ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        cidr_block: "{{ vpc_cidr_block }}"
        name: "{{ vpc_name }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: present
      register: vpc_result

    # Internet Gateway Creation
    - ec2_vpc_igw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ igw_name }}"
      register: igw_result

    # Create Public Subnet
    - ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        az: "{{ pubzone }}"
        state: present
        cidr: "{{ pubsubnet_cidr_block }}"
        map_public: yes
        tags:
          Name: "{{ pubsubnet_name }}"
      register: pubsubnet_result

    # Create Private Subnet
    - ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        az: "{{ pvtzone }}"
        state: present
        cidr: "{{ pvtsubnet_cidr_block }}"
        map_public: no
        tags:
          Name: "{{ pvtsubnet_name }}"
      register: pvtsubnet_result

    # Create Public Route Table
    - ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ pubroute_table_name }}"
        subnets: [ "{{ pubsubnet_result.subnet.id }}" ]
        routes:
          - dest: "{{ destination_cidr_block }}"
            gateway_id: "{{ igw_result.gateway_id }}"
      register: public_route_table

    # Create Private Route Table
    - ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ pvtroute_table_name }}"
        subnets: [ "{{ pvtsubnet_result.subnet.id }}" ]
      register: private_route_table

    # Create Security Group
    - ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        name: "{{ security_group_name }}"
        description: "Allow all traffic"
        tags:
          Name: "{{ security_group_name }}"
        rules:
          - proto: all
            cidr_ip: 0.0.0.0/0
            rule_desc: "Allow all traffic"
      register: security_group_results

    # Launch EC2 Instance 1
    - ec2:
        image: "{{ image_id }}"
        instance_type: "{{ type }}"
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        wait: yes
        count: 1
        state: present
        vpc_subnet_id: "{{ pubsubnet_result.subnet.id }}"
        assign_public_ip: yes
        group_id: "{{ security_group_results.group_id }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        user_data: "{{ lookup('file', 'data1.sh') }}"
        instance_tags:
          Name: "{{ instance_name1 }}"

    # Launch EC2 Instance 2
    - ec2:
        image: "{{ image_id }}"
        instance_type: "{{ type }}"
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        wait: yes
        count: 1
        state: present
        vpc_subnet_id: "{{ pubsubnet_result.subnet.id }}"
        assign_public_ip: yes
        group_id: "{{ security_group_results.group_id }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        user_data: "{{ lookup('file', 'data2.sh') }}"
        instance_tags:
          Name: "{{ instance_name2 }}"
